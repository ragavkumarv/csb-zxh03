{"version":3,"sources":["src/index.js"],"names":["sortByName","a","b","nameA","name","toUpperCase","nameB","getCountries","fetch","method","then","data","json","countries","sort","sortedCountries","countryList","document","querySelector","previousFirstLetter","forEach","country","countryContainer","createElement","className","currentFirstLetter","countryHeading","innerHTML","append","flag","population","region","capital"],"mappings":";;;AAiEY,aAtDZ,SAASA,EAAWC,EAAGC,GACjBC,IAAAA,EAAQF,EAAEG,KAAKC,cACfC,EAAQJ,EAAEE,KAAKC,cACfF,OAAAA,EAAQG,GACF,EAENH,EAAQG,EACH,EAIF,EAGT,SAASC,IACPC,MAAM,uCAAwC,CAC5CC,OAAQ,QAEPC,KAAK,SAACC,GAASA,OAAAA,EAAKC,SACpBF,KAAK,SAACG,GAAcA,OAAAA,EAAUC,KAAKd,KACnCU,KAAK,SAACK,GACCC,IAAAA,EAAcC,SAASC,cAAc,iBACvCC,EAAsB,GAC1BJ,EAAgBK,QAAQ,SAACC,GACjBC,IAAAA,EAAmBL,SAASM,cAAc,OAChDD,EAAiBE,UAAY,YACzBC,IAAAA,EAAqBJ,EAAQjB,KAAK,GAGlCe,GAAAA,GAAuBM,EAAoB,CACvCC,IAAAA,EAAiBT,SAASM,cAAc,OAC9CG,EAAeF,UAAY,UAC3BE,EAAeC,UAAmBF,OAAAA,OAAAA,EAAlC,SACAT,EAAYY,OAAOF,GACnBP,EAAsBM,EAIxBH,EAAiBK,UAEiBN,4DAAAA,OAAAA,EAAQQ,KAGlCR,+FAAAA,OAAAA,EAAQjB,KACiDiB,mFAAAA,OAAAA,EAAQS,WACbT,6EAAAA,OAAAA,EAAQU,OACRV,4EAAAA,OAAAA,EAAQW,QARpE,kCAWAhB,EAAYY,OAAON,OA5D3B,QAAA,gBAiEAf","file":"src.d0d306a7.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\n// {name: \"Austria\", topLevelDomain: [\".at\"], alpha2Code: \"AT\", alpha3Code: \"AUT\", callingCodes: [\"43\"],…}\n// {name: \"Azerbaijan\", topLevelDomain: [\".az\"], alpha2Code: \"AZ\", alpha3Code: \"AZE\",…}\n// {heading: 'B'}\n// {name: \"Bahamas\", topLevelDomain: [\".bs\"], alpha2Code: \"BS\", alpha3Code: \"BHS\", callingCodes: [\"1242\"],…}\n\n// 'Az'\n// 'B'\n// 'Ba'\n\nfunction sortByName(a, b) {\n  var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n  var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n  if (nameA < nameB) {\n    return -1;\n  }\n  if (nameA > nameB) {\n    return 1;\n  }\n\n  // names must be equal\n  return 0;\n}\n\nfunction getCountries() {\n  fetch(\"https://restcountries.eu/rest/v2/all\", {\n    method: \"GET\"\n  })\n    .then((data) => data.json())\n    .then((countries) => countries.sort(sortByName))\n    .then((sortedCountries) => {\n      const countryList = document.querySelector(\".country-list\");\n      let previousFirstLetter = \"\";\n      sortedCountries.forEach((country) => {\n        const countryContainer = document.createElement(\"div\");\n        countryContainer.className = \"container\";\n        let currentFirstLetter = country.name[0];\n        // console.log('Before', {currentFirstLetter,previousFirstLetter, name: country.name});\n\n        if (previousFirstLetter != currentFirstLetter) {\n          const countryHeading = document.createElement(\"div\");\n          countryHeading.className = \"heading\";\n          countryHeading.innerHTML = `<h2>${currentFirstLetter}</h2>`;\n          countryList.append(countryHeading);\n          previousFirstLetter = currentFirstLetter;\n          // console.log('After', {currentFirstLetter,previousFirstLetter, name: country.name});\n        }\n\n        countryContainer.innerHTML = `\n        <div>\n          <img class=\"country-flag\" src=${country.flag} alt=\"country flag\">\n        </div>\n        <div class=\"country-details\">\n          <h2>${country.name} </h2>\n          <p> <span class=\"country-details-heading\">Population:</span> ${country.population} </p>\n          <p> <span class=\"country-details-heading\">Region:</span>${country.region}</p>\n          <p><span class=\"country-details-heading\">Capital:</span>${country.capital}</p>\n        </div>\n        `;\n        countryList.append(countryContainer);\n      });\n    });\n}\n\ngetCountries();\n"]}